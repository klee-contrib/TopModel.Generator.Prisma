{
  "$id": "topmodel.config.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Fichier de config du générateur",
  "required": [
    "app"
  ],
  "properties": {
    "app": {
      "type": "string",
      "description": "Nom de l'application."
    },
    "noWarn": {
      "type": "array",
      "description": "Liste des warnings à ignorer.",
      "items": {
        "type": "string",
        "description": "Code du warning (TMD9XXX) à ignorer ",
        "enum": [
          "TMD9001",
          "TMD9002",
          "TMD9003",
          "TMD9004"
        ]
      }
    },
    "modelRoot": {
      "type": "string",
      "description": "Chemin du dossier racine qui contient tous les fichiers tmd du modèle, qui seront chargés par le générateur (à l'exception du fichier de domaines qui est chargé à part). Si non renseigné, le dossier contenant le fichier de config sera utilisé."
    },
    "lockFileName": {
      "type": "string",
      "description": "Nom du fichier de lock",
      "default": "topmodel.lock"
    },
    "pluralizeTableNames": {
      "type": "boolean",
      "description": "Utilise le nom au pluriel des classes pour générer leur noms de table SQL."
    },
    "useLegacyRoleNames": {
      "type": "boolean",
      "description": "Transforme les noms de rôles d'associations en upper case (au lieu de constant case) pour déterminer le nom SQL des propriétés",
      "default": "false"
    },
    "useLegacyAssociationCompositionMappers": {
      "type": "boolean",
      "description": "Permet de mapper les compositions OneToMany et ManyToMany à des compositions avec un kind non null. Sans garantie de résultat...",
      "default": false
    },
    "i18n": {
      "type": "object",
      "description": "Configuration de la localisation de l'application.",
      "additionalProperties": false,
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "Template du chemin des dossiers de traductions entrants. Doit contenir le template {lang}",
          "default": "{lang}"
        },
        "defaultLang": {
          "type": "string",
          "description": "Langue par défaut de l'application."
        },
        "langs": {
          "type": "array",
          "description": "Liste des langues de l'application (autre que la langue par défaut).",
          "items": {
            "type": "string",
            "description": "Code du langage"
          }
        },
        "translateReferences": {
          "type": "boolean",
          "description": "Si les libellés des listes de références doivent être traduits.",
          "default": "true"
        },
        "translateProperties": {
          "type": "boolean",
          "description": "Si les libellés des propriétés doivent être traduits.",
          "default": "true"
        }
      }
    },
    "generators": {
      "type": "array",
      "description": "Chemins vers des projets C# contenant des générateurs personnalisés",
      "items": {
        "type": "string"
      }
    },
    "javascript": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Config pour la génération de Javascript.",
        "additionalProperties": false,
        "required": [
          "outputDirectory",
          "tags"
        ],
        "properties": {
          "language": {
            "type": "string",
            "description": "Langage du générateur, utilisé pour choisir l'implémentation correspondante des domaines, décorateurs et convertisseurs. Par défaut : 'ts'."
          },
          "tags": {
            "type": "array",
            "description": "Précise les tags de fichier que le générateur doit lire",
            "items": {
              "type": "string",
              "description": "Catégorie de fichier que le générateur doit lire."
            }
          },
          "variables": {
            "type": "object",
            "description": "Définitions de variables à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".+": {
                "type": "string"
              }
            }
          },
          "tagVariables": {
            "type": "object",
            "description": "Définitions de variables par tag à utiliser dans les différents paramètres du générateur.",
            "patternProperties": {
              ".*": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "disable": {
            "type": "array",
            "description": "Désactive les générateurs demandés",
            "items": {
              "type": "string",
              "enum": [
                "JSDefinitionGen",
                "JSReferenceGen",
                "JSNGApiClientGen",
                "JSApiClientGen",
                "JSResourceGen"
              ]
            }
          },
          "outputDirectory": {
            "type": "string",
            "description": "Racine du répertoire de génération."
          },
          "ignoreDefaultValues": {
            "type": "boolean",
            "description": "Désactive la génération des valeurs par défaut des propriétés dans les classes et endpoints générés avec cette configuration."
          },
          "modelRootPath": {
            "type": "string",
            "description": "Localisation du modèle, relative au répertoire de génération. Si non renseigné, aucun modèle ne sera généré."
          },
          "resourceRootPath": {
            "type": "string",
            "description": "Localisation des ressources i18n, relative au répertoire de génération. Si non renseigné, aucun fichier ne sera généré"
          },
          "apiClientRootPath": {
            "type": "string",
            "description": "Localisation des clients d'API, relative au répertoire de génération. Si non renseigné, aucun fichier ne sera généré."
          },
          "apiClientFilePath": {
            "type": "string",
            "description": "Chemin vers lequel sont créés les fichiers d'endpoints générés, relatif à la racine de l'API. En mode Angular, la valeur par défaut est `{module}/{fileName}.service`",
            "default": "{module}/{fileName}"
          },
          "fetchPath": {
            "type": "string",
            "description": "Chemin ou import vers un 'fetch' personnalisé, relatif au répertoire de génération s'il commence par un '.'."
          },
          "domainPath": {
            "type": "string",
            "description": "Chemin ou import vers le fichier 'domain', relatif au répertoire de génération s'il commence par un '.'.",
            "default": "../domains"
          },
          "apiMode": {
            "type": "string",
            "description": "Framework cible pour la génération.",
            "default": "focus",
            "enum": [
              "angular",
              "angular_promise",
              "vanilla",
              "nuxt"
            ]
          },
          "entityMode": {
            "type": "string",
            "description": "Framework cible pour la génération.",
            "default": "typed",
            "enum": [
              "untyped",
              "typed"
            ]
          },
          "extendedCompositions": {
            "type": "boolean",
            "description": "Génère `isRequired`, `label` (et `comment`) sur les compositions dans les entitées typées."
          },
          "entityTypesPath": {
            "type": "string",
            "description": "Chemin d'import des type d'entités",
            "default": "@focus4/stores"
          },
          "resourceMode": {
            "type": "string",
            "description": "Mode de génération (JS, JSON ou JSON Schema).",
            "enum": [
              "js",
              "json"
            ]
          },
          "translateReferences": {
            "type": "boolean",
            "description": "Si les listes de référence doivent être traduites",
            "default": "true"
          },
          "translateProperties": {
            "type": "boolean",
            "description": "Si les libellés des propriétés doivent être traduits",
            "default": "true"
          },
          "generateComments": {
            "type": "boolean",
            "description": "Ajoute les commentaires dans les entités JS générées."
          },
          "generateMainResourceFiles": {
            "type": "boolean",
            "description": "Génère un fichier 'index.ts' qui importe et réexporte tous les fichiers de resources générés par langue. Uniquement compatible avec `resourceMode: js`."
          },
          "referenceMode": {
            "type": "string",
            "description": "Mode de génération des listes de références (définitions ou valeurs).",
            "enum": [
              "definition",
              "values"
            ],
            "default": "definition"
          }
        }
      }
    }
  },
  "additionalProperties": false
}